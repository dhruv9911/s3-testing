AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create AWS CodePipeline and CodeBuild for deploying an S3 bucket via CloudFormation.'

Parameters:
  GitHubRepoOwner:
    Type: String
    Description: 'GitHub repository owner name'
    Default: dhruv9911
  GitHubRepoName:
    Type: String
    Description: 'GitHub repository name' ### Change here github repository
    Default: s3-testing
  GitHubBranchName:
    Type: String
    Default: 'main'
    Description: 'GitHub branch name'
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: 'GitHub OAuth token for accessing the repository'  
    Default: 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     ####token Code
  CloudFormationStackName:
    Type: String
    Description: 'Name of the CloudFormation stack to be created'
    Default: 'ci-cd-org'     ### change here Stack Name
  ArtifactBucketName:
    Type: String
    Description: 'S3 bucket for storing artifacts'
    Default: 'aws-organization-creation-cloudformation-code-bucket'   ###Change here S3 Bucket where artifact will store

Resources:
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: 'S3BucketDeployment'
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        Type: LINUX_CONTAINER
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn

  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'cloudformation:*'
                  - '*'
                Resource: '*'

  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CloudFormationDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:DeleteStack'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - '*'
                  - 'iam:PassRole'
                Resource: '*'

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: 'S3BucketPipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranchName
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateCloudFormationStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref CloudFormationStackName
                TemplatePath: BuildOutput::s3.yaml         ###### Update here your Cloudformation YML file
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'codebuild:*'
                  - 'cloudformation:*'
                  - '*'
                Resource: '*'

Outputs:
  PipelineName:
    Description: 'Name of the created CodePipeline'
    Value: !Ref CodePipeline
